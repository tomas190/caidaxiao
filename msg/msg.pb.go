// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0-devel
// 	protoc        v3.12.1
// source: msg.proto

package msg

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 消息ID
type MessageID int32

const (
	MessageID_MSG_Ping                   MessageID = 0
	MessageID_MSG_Pong                   MessageID = 1
	MessageID_MSG_Login_C2S              MessageID = 2
	MessageID_MSG_Login_S2C              MessageID = 3
	MessageID_MSG_Logout_C2S             MessageID = 4
	MessageID_MSG_Logout_S2C             MessageID = 5
	MessageID_MSG_JoinRoom_C2S           MessageID = 6
	MessageID_MSG_JoinRoom_S2C           MessageID = 7
	MessageID_MSG_EnterRoom_S2C          MessageID = 8
	MessageID_MSG_LeaveRoom_C2S          MessageID = 9
	MessageID_MSG_LeaveRoom_S2C          MessageID = 10
	MessageID_MSG_ActionTime_S2C         MessageID = 11
	MessageID_MSG_PlayerAction_C2S       MessageID = 12
	MessageID_MSG_PlayerAction_S2C       MessageID = 13
	MessageID_MSG_PotChangeMoney_S2C     MessageID = 14
	MessageID_MSG_ResultData_S2C         MessageID = 15
	MessageID_MSG_BankerData_C2S         MessageID = 16
	MessageID_MSG_BankerData_S2C         MessageID = 17
	MessageID_MSG_EmojiChat_C2S          MessageID = 18
	MessageID_MSG_EmojiChat_S2C          MessageID = 19
	MessageID_MSG_SendActTime_S2C        MessageID = 20
	MessageID_MSG_ChangeRoomType_S2C     MessageID = 21
	MessageID_MSG_ErrorMsg_S2C           MessageID = 22
	MessageID_MSG_ShowTableInfo_C2S      MessageID = 23
	MessageID_MSG_ShowTableInfo_S2C      MessageID = 24
	MessageID_MSG_KickedOutPush          MessageID = 25
	MessageID_MSG_ZhiBoUpdateBalancePush MessageID = 26
)

// Enum value maps for MessageID.
var (
	MessageID_name = map[int32]string{
		0:  "MSG_Ping",
		1:  "MSG_Pong",
		2:  "MSG_Login_C2S",
		3:  "MSG_Login_S2C",
		4:  "MSG_Logout_C2S",
		5:  "MSG_Logout_S2C",
		6:  "MSG_JoinRoom_C2S",
		7:  "MSG_JoinRoom_S2C",
		8:  "MSG_EnterRoom_S2C",
		9:  "MSG_LeaveRoom_C2S",
		10: "MSG_LeaveRoom_S2C",
		11: "MSG_ActionTime_S2C",
		12: "MSG_PlayerAction_C2S",
		13: "MSG_PlayerAction_S2C",
		14: "MSG_PotChangeMoney_S2C",
		15: "MSG_ResultData_S2C",
		16: "MSG_BankerData_C2S",
		17: "MSG_BankerData_S2C",
		18: "MSG_EmojiChat_C2S",
		19: "MSG_EmojiChat_S2C",
		20: "MSG_SendActTime_S2C",
		21: "MSG_ChangeRoomType_S2C",
		22: "MSG_ErrorMsg_S2C",
		23: "MSG_ShowTableInfo_C2S",
		24: "MSG_ShowTableInfo_S2C",
		25: "MSG_KickedOutPush",
		26: "MSG_ZhiBoUpdateBalancePush",
	}
	MessageID_value = map[string]int32{
		"MSG_Ping":                   0,
		"MSG_Pong":                   1,
		"MSG_Login_C2S":              2,
		"MSG_Login_S2C":              3,
		"MSG_Logout_C2S":             4,
		"MSG_Logout_S2C":             5,
		"MSG_JoinRoom_C2S":           6,
		"MSG_JoinRoom_S2C":           7,
		"MSG_EnterRoom_S2C":          8,
		"MSG_LeaveRoom_C2S":          9,
		"MSG_LeaveRoom_S2C":          10,
		"MSG_ActionTime_S2C":         11,
		"MSG_PlayerAction_C2S":       12,
		"MSG_PlayerAction_S2C":       13,
		"MSG_PotChangeMoney_S2C":     14,
		"MSG_ResultData_S2C":         15,
		"MSG_BankerData_C2S":         16,
		"MSG_BankerData_S2C":         17,
		"MSG_EmojiChat_C2S":          18,
		"MSG_EmojiChat_S2C":          19,
		"MSG_SendActTime_S2C":        20,
		"MSG_ChangeRoomType_S2C":     21,
		"MSG_ErrorMsg_S2C":           22,
		"MSG_ShowTableInfo_C2S":      23,
		"MSG_ShowTableInfo_S2C":      24,
		"MSG_KickedOutPush":          25,
		"MSG_ZhiBoUpdateBalancePush": 26,
	}
)

func (x MessageID) Enum() *MessageID {
	p := new(MessageID)
	*p = x
	return p
}

func (x MessageID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageID) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_proto_enumTypes[0].Descriptor()
}

func (MessageID) Type() protoreflect.EnumType {
	return &file_msg_proto_enumTypes[0]
}

func (x MessageID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageID.Descriptor instead.
func (MessageID) EnumDescriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{0}
}

// 游戏阶段
type GameStep int32

const (
	GameStep_XX_Step GameStep = 0
	GameStep_Banker  GameStep = 1
	GameStep_Banker2 GameStep = 2
	GameStep_DownBet GameStep = 3
	GameStep_Settle  GameStep = 4
	GameStep_Close   GameStep = 5
	GameStep_GetRes  GameStep = 6
	GameStep_LiuJu   GameStep = 7
)

// Enum value maps for GameStep.
var (
	GameStep_name = map[int32]string{
		0: "XX_Step",
		1: "Banker",
		2: "Banker2",
		3: "DownBet",
		4: "Settle",
		5: "Close",
		6: "GetRes",
		7: "LiuJu",
	}
	GameStep_value = map[string]int32{
		"XX_Step": 0,
		"Banker":  1,
		"Banker2": 2,
		"DownBet": 3,
		"Settle":  4,
		"Close":   5,
		"GetRes":  6,
		"LiuJu":   7,
	}
)

func (x GameStep) Enum() *GameStep {
	p := new(GameStep)
	*p = x
	return p
}

func (x GameStep) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameStep) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_proto_enumTypes[1].Descriptor()
}

func (GameStep) Type() protoreflect.EnumType {
	return &file_msg_proto_enumTypes[1]
}

func (x GameStep) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameStep.Descriptor instead.
func (GameStep) EnumDescriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{1}
}

type PlayerStatus int32

const (
	PlayerStatus_XX_Status PlayerStatus = 0
	PlayerStatus_PlayGame  PlayerStatus = 1 // 游戏状态
	PlayerStatus_WatchGame PlayerStatus = 2 // 观战状态
)

// Enum value maps for PlayerStatus.
var (
	PlayerStatus_name = map[int32]string{
		0: "XX_Status",
		1: "PlayGame",
		2: "WatchGame",
	}
	PlayerStatus_value = map[string]int32{
		"XX_Status": 0,
		"PlayGame":  1,
		"WatchGame": 2,
	}
)

func (x PlayerStatus) Enum() *PlayerStatus {
	p := new(PlayerStatus)
	*p = x
	return p
}

func (x PlayerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_proto_enumTypes[2].Descriptor()
}

func (PlayerStatus) Type() protoreflect.EnumType {
	return &file_msg_proto_enumTypes[2]
}

func (x PlayerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerStatus.Descriptor instead.
func (PlayerStatus) EnumDescriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{2}
}

type BankerStatus int32

const (
	BankerStatus_BankerNot  BankerStatus = 0
	BankerStatus_BankerUp   BankerStatus = 1
	BankerStatus_BankerDown BankerStatus = 2
)

// Enum value maps for BankerStatus.
var (
	BankerStatus_name = map[int32]string{
		0: "BankerNot",
		1: "BankerUp",
		2: "BankerDown",
	}
	BankerStatus_value = map[string]int32{
		"BankerNot":  0,
		"BankerUp":   1,
		"BankerDown": 2,
	}
)

func (x BankerStatus) Enum() *BankerStatus {
	p := new(BankerStatus)
	*p = x
	return p
}

func (x BankerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BankerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_proto_enumTypes[3].Descriptor()
}

func (BankerStatus) Type() protoreflect.EnumType {
	return &file_msg_proto_enumTypes[3]
}

func (x BankerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BankerStatus.Descriptor instead.
func (BankerStatus) EnumDescriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{3}
}

//注池类型
type PotType int32

const (
	PotType_XX_Pot      PotType = 0
	PotType_BigPot      PotType = 1
	PotType_SmallPot    PotType = 2
	PotType_SinglePot   PotType = 3
	PotType_DoublePot   PotType = 4
	PotType_PairPot     PotType = 5
	PotType_StraightPot PotType = 6
	PotType_LeopardPot  PotType = 7
)

// Enum value maps for PotType.
var (
	PotType_name = map[int32]string{
		0: "XX_Pot",
		1: "BigPot",
		2: "SmallPot",
		3: "SinglePot",
		4: "DoublePot",
		5: "PairPot",
		6: "StraightPot",
		7: "LeopardPot",
	}
	PotType_value = map[string]int32{
		"XX_Pot":      0,
		"BigPot":      1,
		"SmallPot":    2,
		"SinglePot":   3,
		"DoublePot":   4,
		"PairPot":     5,
		"StraightPot": 6,
		"LeopardPot":  7,
	}
)

func (x PotType) Enum() *PotType {
	p := new(PotType)
	*p = x
	return p
}

func (x PotType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PotType) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_proto_enumTypes[4].Descriptor()
}

func (PotType) Type() protoreflect.EnumType {
	return &file_msg_proto_enumTypes[4]
}

func (x PotType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PotType.Descriptor instead.
func (PotType) EnumDescriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{4}
}

//卡牌类型
type CardsType int32

const (
	CardsType_XX_Card CardsType = 0
	CardsType_Small   CardsType = 1 // 小
	CardsType_Big     CardsType = 2 // 大
	CardsType_Leopard CardsType = 3 // 豹子
)

// Enum value maps for CardsType.
var (
	CardsType_name = map[int32]string{
		0: "XX_Card",
		1: "Small",
		2: "Big",
		3: "Leopard",
	}
	CardsType_value = map[string]int32{
		"XX_Card": 0,
		"Small":   1,
		"Big":     2,
		"Leopard": 3,
	}
)

func (x CardsType) Enum() *CardsType {
	p := new(CardsType)
	*p = x
	return p
}

func (x CardsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardsType) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_proto_enumTypes[5].Descriptor()
}

func (CardsType) Type() protoreflect.EnumType {
	return &file_msg_proto_enumTypes[5]
}

func (x CardsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardsType.Descriptor instead.
func (CardsType) EnumDescriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{5}
}

type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{0}
}

type Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerTime int64 `protobuf:"varint,1,opt,name=serverTime,proto3" json:"serverTime,omitempty"` // 服务器时间戳
}

func (x *Pong) Reset() {
	*x = Pong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{1}
}

func (x *Pong) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

type PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string  `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	NickName string  `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`
	HeadImg  string  `protobuf:"bytes,3,opt,name=headImg,proto3" json:"headImg,omitempty"`
	Account  float64 `protobuf:"fixed64,4,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *PlayerInfo) Reset() {
	*x = PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo) ProtoMessage() {}

func (x *PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfo.ProtoReflect.Descriptor instead.
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{2}
}

func (x *PlayerInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlayerInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *PlayerInfo) GetHeadImg() string {
	if x != nil {
		return x.HeadImg
	}
	return ""
}

func (x *PlayerInfo) GetAccount() float64 {
	if x != nil {
		return x.Account
	}
	return 0
}

type Login_C2S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	PassWord string `protobuf:"bytes,2,opt,name=PassWord,proto3" json:"PassWord,omitempty"`
	Token    string `protobuf:"bytes,3,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (x *Login_C2S) Reset() {
	*x = Login_C2S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Login_C2S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Login_C2S) ProtoMessage() {}

func (x *Login_C2S) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Login_C2S.ProtoReflect.Descriptor instead.
func (*Login_C2S) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{3}
}

func (x *Login_C2S) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Login_C2S) GetPassWord() string {
	if x != nil {
		return x.PassWord
	}
	return ""
}

func (x *Login_C2S) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type Login_S2C struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerInfo  *PlayerInfo `protobuf:"bytes,1,opt,name=playerInfo,proto3" json:"playerInfo,omitempty"`
	Backroom    bool        `protobuf:"varint,2,opt,name=backroom,proto3" json:"backroom,omitempty"`
	PlayerNumR1 int32       `protobuf:"varint,3,opt,name=PlayerNumR1,proto3" json:"PlayerNumR1,omitempty"`
	PlayerNumR2 int32       `protobuf:"varint,4,opt,name=PlayerNumR2,proto3" json:"PlayerNumR2,omitempty"`
	Room01      bool        `protobuf:"varint,5,opt,name=room01,proto3" json:"room01,omitempty"`
	Room02      bool        `protobuf:"varint,6,opt,name=room02,proto3" json:"room02,omitempty"`
}

func (x *Login_S2C) Reset() {
	*x = Login_S2C{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Login_S2C) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Login_S2C) ProtoMessage() {}

func (x *Login_S2C) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Login_S2C.ProtoReflect.Descriptor instead.
func (*Login_S2C) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{4}
}

func (x *Login_S2C) GetPlayerInfo() *PlayerInfo {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *Login_S2C) GetBackroom() bool {
	if x != nil {
		return x.Backroom
	}
	return false
}

func (x *Login_S2C) GetPlayerNumR1() int32 {
	if x != nil {
		return x.PlayerNumR1
	}
	return 0
}

func (x *Login_S2C) GetPlayerNumR2() int32 {
	if x != nil {
		return x.PlayerNumR2
	}
	return 0
}

func (x *Login_S2C) GetRoom01() bool {
	if x != nil {
		return x.Room01
	}
	return false
}

func (x *Login_S2C) GetRoom02() bool {
	if x != nil {
		return x.Room02
	}
	return false
}

type Logout_C2S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Logout_C2S) Reset() {
	*x = Logout_C2S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Logout_C2S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logout_C2S) ProtoMessage() {}

func (x *Logout_C2S) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logout_C2S.ProtoReflect.Descriptor instead.
func (*Logout_C2S) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{5}
}

type Logout_S2C struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Logout_S2C) Reset() {
	*x = Logout_S2C{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Logout_S2C) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logout_S2C) ProtoMessage() {}

func (x *Logout_S2C) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logout_S2C.ProtoReflect.Descriptor instead.
func (*Logout_S2C) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{6}
}

type PotWinList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResultNum int32     `protobuf:"varint,1,opt,name=resultNum,proto3" json:"resultNum,omitempty"`                  // 开奖结果
	BigSmall  int32     `protobuf:"varint,2,opt,name=bigSmall,proto3" json:"bigSmall,omitempty"`                    // 大小列表 1小,2大
	SinDouble int32     `protobuf:"varint,3,opt,name=sinDouble,proto3" json:"sinDouble,omitempty"`                  // 单双列列表 1单,2双
	CardType  CardsType `protobuf:"varint,4,opt,name=cardType,proto3,enum=msg.CardsType" json:"cardType,omitempty"` // 比牌类型 1对,2顺,3豹
}

func (x *PotWinList) Reset() {
	*x = PotWinList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PotWinList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PotWinList) ProtoMessage() {}

func (x *PotWinList) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PotWinList.ProtoReflect.Descriptor instead.
func (*PotWinList) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{7}
}

func (x *PotWinList) GetResultNum() int32 {
	if x != nil {
		return x.ResultNum
	}
	return 0
}

func (x *PotWinList) GetBigSmall() int32 {
	if x != nil {
		return x.BigSmall
	}
	return 0
}

func (x *PotWinList) GetSinDouble() int32 {
	if x != nil {
		return x.SinDouble
	}
	return 0
}

func (x *PotWinList) GetCardType() CardsType {
	if x != nil {
		return x.CardType
	}
	return CardsType_XX_Card
}

type PlayerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerInfo     *PlayerInfo       `protobuf:"bytes,1,opt,name=playerInfo,proto3" json:"playerInfo,omitempty"`
	DownBetMoney   *DownBetMoney     `protobuf:"bytes,2,opt,name=downBetMoney,proto3" json:"downBetMoney,omitempty"`            //玩家各注池下注的金额
	Status         PlayerStatus      `protobuf:"varint,3,opt,name=status,proto3,enum=msg.PlayerStatus" json:"status,omitempty"` // 玩家状态
	BankerMoney    float64           `protobuf:"fixed64,4,opt,name=bankerMoney,proto3" json:"bankerMoney,omitempty"`            // 庄家金额
	BankerCount    int32             `protobuf:"varint,5,opt,name=bankerCount,proto3" json:"bankerCount,omitempty"`             // 连庄次数
	TotalDownBet   int32             `protobuf:"varint,6,opt,name=totalDownBet,proto3" json:"totalDownBet,omitempty"`           // 玩家房间总下注
	WinTotalCount  int32             `protobuf:"varint,7,opt,name=winTotalCount,proto3" json:"winTotalCount,omitempty"`         // 玩家房间Win总次数
	ResultMoney    float64           `protobuf:"fixed64,8,opt,name=resultMoney,proto3" json:"resultMoney,omitempty"`            // 本局结算金额
	DownBetHistory []*DownBetHistory `protobuf:"bytes,10,rep,name=downBetHistory,proto3" json:"downBetHistory,omitempty"`       // 下注记录
	IsAction       bool              `protobuf:"varint,11,opt,name=IsAction,proto3" json:"IsAction,omitempty"`                  // 玩家是否行动
	IsBanker       bool              `protobuf:"varint,12,opt,name=IsBanker,proto3" json:"IsBanker,omitempty"`                  // 玩家是否庄家
	IsRobot        bool              `protobuf:"varint,13,opt,name=IsRobot,proto3" json:"IsRobot,omitempty"`                    // 玩家是否机器人
}

func (x *PlayerData) Reset() {
	*x = PlayerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerData) ProtoMessage() {}

func (x *PlayerData) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerData.ProtoReflect.Descriptor instead.
func (*PlayerData) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{8}
}

func (x *PlayerData) GetPlayerInfo() *PlayerInfo {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *PlayerData) GetDownBetMoney() *DownBetMoney {
	if x != nil {
		return x.DownBetMoney
	}
	return nil
}

func (x *PlayerData) GetStatus() PlayerStatus {
	if x != nil {
		return x.Status
	}
	return PlayerStatus_XX_Status
}

func (x *PlayerData) GetBankerMoney() float64 {
	if x != nil {
		return x.BankerMoney
	}
	return 0
}

func (x *PlayerData) GetBankerCount() int32 {
	if x != nil {
		return x.BankerCount
	}
	return 0
}

func (x *PlayerData) GetTotalDownBet() int32 {
	if x != nil {
		return x.TotalDownBet
	}
	return 0
}

func (x *PlayerData) GetWinTotalCount() int32 {
	if x != nil {
		return x.WinTotalCount
	}
	return 0
}

func (x *PlayerData) GetResultMoney() float64 {
	if x != nil {
		return x.ResultMoney
	}
	return 0
}

func (x *PlayerData) GetDownBetHistory() []*DownBetHistory {
	if x != nil {
		return x.DownBetHistory
	}
	return nil
}

func (x *PlayerData) GetIsAction() bool {
	if x != nil {
		return x.IsAction
	}
	return false
}

func (x *PlayerData) GetIsBanker() bool {
	if x != nil {
		return x.IsBanker
	}
	return false
}

func (x *PlayerData) GetIsRobot() bool {
	if x != nil {
		return x.IsRobot
	}
	return false
}

//玩家各注池下注的金额
type DownBetMoney struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BigDownBet      int32 `protobuf:"varint,1,opt,name=BigDownBet,proto3" json:"BigDownBet,omitempty"`
	SmallDownBet    int32 `protobuf:"varint,2,opt,name=SmallDownBet,proto3" json:"SmallDownBet,omitempty"`
	SingleDownBet   int32 `protobuf:"varint,3,opt,name=SingleDownBet,proto3" json:"SingleDownBet,omitempty"`
	DoubleDownBet   int32 `protobuf:"varint,4,opt,name=DoubleDownBet,proto3" json:"DoubleDownBet,omitempty"`
	PairDownBet     int32 `protobuf:"varint,5,opt,name=PairDownBet,proto3" json:"PairDownBet,omitempty"`
	StraightDownBet int32 `protobuf:"varint,6,opt,name=StraightDownBet,proto3" json:"StraightDownBet,omitempty"`
	LeopardDownBet  int32 `protobuf:"varint,7,opt,name=LeopardDownBet,proto3" json:"LeopardDownBet,omitempty"`
}

func (x *DownBetMoney) Reset() {
	*x = DownBetMoney{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownBetMoney) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownBetMoney) ProtoMessage() {}

func (x *DownBetMoney) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownBetMoney.ProtoReflect.Descriptor instead.
func (*DownBetMoney) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{9}
}

func (x *DownBetMoney) GetBigDownBet() int32 {
	if x != nil {
		return x.BigDownBet
	}
	return 0
}

func (x *DownBetMoney) GetSmallDownBet() int32 {
	if x != nil {
		return x.SmallDownBet
	}
	return 0
}

func (x *DownBetMoney) GetSingleDownBet() int32 {
	if x != nil {
		return x.SingleDownBet
	}
	return 0
}

func (x *DownBetMoney) GetDoubleDownBet() int32 {
	if x != nil {
		return x.DoubleDownBet
	}
	return 0
}

func (x *DownBetMoney) GetPairDownBet() int32 {
	if x != nil {
		return x.PairDownBet
	}
	return 0
}

func (x *DownBetMoney) GetStraightDownBet() int32 {
	if x != nil {
		return x.StraightDownBet
	}
	return 0
}

func (x *DownBetMoney) GetLeopardDownBet() int32 {
	if x != nil {
		return x.LeopardDownBet
	}
	return 0
}

type DownBetHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeFmt      string           `protobuf:"bytes,1,opt,name=timeFmt,proto3" json:"timeFmt,omitempty"`           // 時間戳
	ResNum       []int32          `protobuf:"varint,2,rep,packed,name=resNum,proto3" json:"resNum,omitempty"`     // 獎號
	Result       *LotteryResult   `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`             // 一般開獎結果
	ResultFX     *LotteryResultFX `protobuf:"bytes,4,opt,name=resultFX,proto3" json:"resultFX,omitempty"`         // 富鑫II開獎結果
	DownBetMoney *DownBetMoney    `protobuf:"bytes,5,opt,name=downBetMoney,proto3" json:"downBetMoney,omitempty"` // 玩家下注金額
}

func (x *DownBetHistory) Reset() {
	*x = DownBetHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownBetHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownBetHistory) ProtoMessage() {}

func (x *DownBetHistory) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownBetHistory.ProtoReflect.Descriptor instead.
func (*DownBetHistory) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{10}
}

func (x *DownBetHistory) GetTimeFmt() string {
	if x != nil {
		return x.TimeFmt
	}
	return ""
}

func (x *DownBetHistory) GetResNum() []int32 {
	if x != nil {
		return x.ResNum
	}
	return nil
}

func (x *DownBetHistory) GetResult() *LotteryResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DownBetHistory) GetResultFX() *LotteryResultFX {
	if x != nil {
		return x.ResultFX
	}
	return nil
}

func (x *DownBetHistory) GetDownBetMoney() *DownBetMoney {
	if x != nil {
		return x.DownBetMoney
	}
	return nil
}

// 一般公式結果
type LotteryResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LuckyNum int32     `protobuf:"varint,1,opt,name=luckyNum,proto3" json:"luckyNum,omitempty"`                    // 公式計算結果（万位+十位）x（千位-个位）-百位
	CardType CardsType `protobuf:"varint,2,opt,name=cardType,proto3,enum=msg.CardsType" json:"cardType,omitempty"` // 比牌类型 1小,2大,3豹
}

func (x *LotteryResult) Reset() {
	*x = LotteryResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LotteryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotteryResult) ProtoMessage() {}

func (x *LotteryResult) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotteryResult.ProtoReflect.Descriptor instead.
func (*LotteryResult) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{11}
}

func (x *LotteryResult) GetLuckyNum() int32 {
	if x != nil {
		return x.LuckyNum
	}
	return 0
}

func (x *LotteryResult) GetCardType() CardsType {
	if x != nil {
		return x.CardType
	}
	return CardsType_XX_Card
}

// 富鑫II公式結果
type LotteryResultFX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LuckyNum int32     `protobuf:"varint,1,opt,name=luckyNum,proto3" json:"luckyNum,omitempty"`                    // 公式計算結果 千位+百位+個位
	CardType CardsType `protobuf:"varint,2,opt,name=cardType,proto3,enum=msg.CardsType" json:"cardType,omitempty"` // 比牌类型 1小,2大,3豹
}

func (x *LotteryResultFX) Reset() {
	*x = LotteryResultFX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LotteryResultFX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotteryResultFX) ProtoMessage() {}

func (x *LotteryResultFX) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotteryResultFX.ProtoReflect.Descriptor instead.
func (*LotteryResultFX) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{12}
}

func (x *LotteryResultFX) GetLuckyNum() int32 {
	if x != nil {
		return x.LuckyNum
	}
	return 0
}

func (x *LotteryResultFX) GetCardType() CardsType {
	if x != nil {
		return x.CardType
	}
	return CardsType_XX_Card
}

type LotteryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeFmt  string           `protobuf:"bytes,1,opt,name=timeFmt,proto3" json:"timeFmt,omitempty"`
	ResNum   []int32          `protobuf:"varint,2,rep,packed,name=resNum,proto3" json:"resNum,omitempty"`
	Result   *LotteryResult   `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	ResultFX *LotteryResultFX `protobuf:"bytes,4,opt,name=resultFX,proto3" json:"resultFX,omitempty"`
	IsLiuJu  bool             `protobuf:"varint,5,opt,name=IsLiuJu,proto3" json:"IsLiuJu,omitempty"` // 是否流局
}

func (x *LotteryData) Reset() {
	*x = LotteryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LotteryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotteryData) ProtoMessage() {}

func (x *LotteryData) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotteryData.ProtoReflect.Descriptor instead.
func (*LotteryData) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{13}
}

func (x *LotteryData) GetTimeFmt() string {
	if x != nil {
		return x.TimeFmt
	}
	return ""
}

func (x *LotteryData) GetResNum() []int32 {
	if x != nil {
		return x.ResNum
	}
	return nil
}

func (x *LotteryData) GetResult() *LotteryResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *LotteryData) GetResultFX() *LotteryResultFX {
	if x != nil {
		return x.ResultFX
	}
	return nil
}

func (x *LotteryData) GetIsLiuJu() bool {
	if x != nil {
		return x.IsLiuJu
	}
	return false
}

type RoomData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId        string         `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	PlayerData    []*PlayerData  `protobuf:"bytes,2,rep,name=playerData,proto3" json:"playerData,omitempty"`
	GameTime      int32          `protobuf:"varint,3,opt,name=gameTime,proto3" json:"gameTime,omitempty"`                   // 游戏时间(之後階段改結構這個可以拿掉)
	GameStep      GameStep       `protobuf:"varint,4,opt,name=gameStep,proto3,enum=msg.GameStep" json:"gameStep,omitempty"` // 当前游戏阶段状态
	ResultInt     []int32        `protobuf:"varint,5,rep,packed,name=resultInt,proto3" json:"resultInt,omitempty"`          // 结算数据
	PotMoneyCount *DownBetMoney  `protobuf:"bytes,6,opt,name=potMoneyCount,proto3" json:"potMoneyCount,omitempty"`          // 注池金额集合
	HistoryData   []*LotteryData `protobuf:"bytes,7,rep,name=historyData,proto3" json:"historyData,omitempty"`              // 历史记录数据
	TablePlayer   []*PlayerData  `protobuf:"bytes,8,rep,name=tablePlayer,proto3" json:"tablePlayer,omitempty"`              // 桌面玩家
	PeriodsNum    string         `protobuf:"bytes,9,opt,name=PeriodsNum,proto3" json:"PeriodsNum,omitempty"`                // 当前奖期
}

func (x *RoomData) Reset() {
	*x = RoomData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomData) ProtoMessage() {}

func (x *RoomData) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomData.ProtoReflect.Descriptor instead.
func (*RoomData) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{14}
}

func (x *RoomData) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomData) GetPlayerData() []*PlayerData {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

func (x *RoomData) GetGameTime() int32 {
	if x != nil {
		return x.GameTime
	}
	return 0
}

func (x *RoomData) GetGameStep() GameStep {
	if x != nil {
		return x.GameStep
	}
	return GameStep_XX_Step
}

func (x *RoomData) GetResultInt() []int32 {
	if x != nil {
		return x.ResultInt
	}
	return nil
}

func (x *RoomData) GetPotMoneyCount() *DownBetMoney {
	if x != nil {
		return x.PotMoneyCount
	}
	return nil
}

func (x *RoomData) GetHistoryData() []*LotteryData {
	if x != nil {
		return x.HistoryData
	}
	return nil
}

func (x *RoomData) GetTablePlayer() []*PlayerData {
	if x != nil {
		return x.TablePlayer
	}
	return nil
}

func (x *RoomData) GetPeriodsNum() string {
	if x != nil {
		return x.PeriodsNum
	}
	return ""
}

type JoinRoom_C2S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
}

func (x *JoinRoom_C2S) Reset() {
	*x = JoinRoom_C2S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRoom_C2S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoom_C2S) ProtoMessage() {}

func (x *JoinRoom_C2S) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoom_C2S.ProtoReflect.Descriptor instead.
func (*JoinRoom_C2S) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{15}
}

func (x *JoinRoom_C2S) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type JoinRoom_S2C struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomData *RoomData `protobuf:"bytes,1,opt,name=roomData,proto3" json:"roomData,omitempty"`
	LeftTime int32     `protobuf:"varint,2,opt,name=leftTime,proto3" json:"leftTime,omitempty"` // 階段剩餘時間
}

func (x *JoinRoom_S2C) Reset() {
	*x = JoinRoom_S2C{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRoom_S2C) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoom_S2C) ProtoMessage() {}

func (x *JoinRoom_S2C) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoom_S2C.ProtoReflect.Descriptor instead.
func (*JoinRoom_S2C) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{16}
}

func (x *JoinRoom_S2C) GetRoomData() *RoomData {
	if x != nil {
		return x.RoomData
	}
	return nil
}

func (x *JoinRoom_S2C) GetLeftTime() int32 {
	if x != nil {
		return x.LeftTime
	}
	return 0
}

type EnterRoom_S2C struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomData *RoomData `protobuf:"bytes,1,opt,name=roomData,proto3" json:"roomData,omitempty"`
}

func (x *EnterRoom_S2C) Reset() {
	*x = EnterRoom_S2C{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterRoom_S2C) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterRoom_S2C) ProtoMessage() {}

func (x *EnterRoom_S2C) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterRoom_S2C.ProtoReflect.Descriptor instead.
func (*EnterRoom_S2C) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{17}
}

func (x *EnterRoom_S2C) GetRoomData() *RoomData {
	if x != nil {
		return x.RoomData
	}
	return nil
}

type LeaveRoom_C2S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeaveRoom_C2S) Reset() {
	*x = LeaveRoom_C2S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveRoom_C2S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRoom_C2S) ProtoMessage() {}

func (x *LeaveRoom_C2S) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRoom_C2S.ProtoReflect.Descriptor instead.
func (*LeaveRoom_C2S) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{18}
}

type LeaveRoom_S2C struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerInfo *PlayerInfo `protobuf:"bytes,1,opt,name=playerInfo,proto3" json:"playerInfo,omitempty"`
}

func (x *LeaveRoom_S2C) Reset() {
	*x = LeaveRoom_S2C{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveRoom_S2C) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRoom_S2C) ProtoMessage() {}

func (x *LeaveRoom_S2C) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRoom_S2C.ProtoReflect.Descriptor instead.
func (*LeaveRoom_S2C) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{19}
}

func (x *LeaveRoom_S2C) GetPlayerInfo() *PlayerInfo {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

type ActionTime_S2C struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameStep GameStep  `protobuf:"varint,1,opt,name=gameStep,proto3,enum=msg.GameStep" json:"gameStep,omitempty"` // 当前階段
	RoomData *RoomData `protobuf:"bytes,2,opt,name=roomData,proto3" json:"roomData,omitempty"`                    // 房间数据
	LeftTime int32     `protobuf:"varint,3,opt,name=leftTime,proto3" json:"leftTime,omitempty"`                   // 階段剩餘時間
}

func (x *ActionTime_S2C) Reset() {
	*x = ActionTime_S2C{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionTime_S2C) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionTime_S2C) ProtoMessage() {}

func (x *ActionTime_S2C) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionTime_S2C.ProtoReflect.Descriptor instead.
func (*ActionTime_S2C) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{20}
}

func (x *ActionTime_S2C) GetGameStep() GameStep {
	if x != nil {
		return x.GameStep
	}
	return GameStep_XX_Step
}

func (x *ActionTime_S2C) GetRoomData() *RoomData {
	if x != nil {
		return x.RoomData
	}
	return nil
}

func (x *ActionTime_S2C) GetLeftTime() int32 {
	if x != nil {
		return x.LeftTime
	}
	return 0
}

type PlayerAction_C2S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownBet  int32   `protobuf:"varint,1,opt,name=downBet,proto3" json:"downBet,omitempty"`                  // 下注金额
	DownPot  PotType `protobuf:"varint,2,opt,name=downPot,proto3,enum=msg.PotType" json:"downPot,omitempty"` // 下注注池类型
	IsAction bool    `protobuf:"varint,3,opt,name=IsAction,proto3" json:"IsAction,omitempty"`                // 玩家是否行动
	Id       string  `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *PlayerAction_C2S) Reset() {
	*x = PlayerAction_C2S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerAction_C2S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerAction_C2S) ProtoMessage() {}

func (x *PlayerAction_C2S) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerAction_C2S.ProtoReflect.Descriptor instead.
func (*PlayerAction_C2S) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{21}
}

func (x *PlayerAction_C2S) GetDownBet() int32 {
	if x != nil {
		return x.DownBet
	}
	return 0
}

func (x *PlayerAction_C2S) GetDownPot() PotType {
	if x != nil {
		return x.DownPot
	}
	return PotType_XX_Pot
}

func (x *PlayerAction_C2S) GetIsAction() bool {
	if x != nil {
		return x.IsAction
	}
	return false
}

func (x *PlayerAction_C2S) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PlayerAction_S2C struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string  `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	DownBet  int32   `protobuf:"varint,2,opt,name=downBet,proto3" json:"downBet,omitempty"`                  // 下注金额
	DownPot  PotType `protobuf:"varint,3,opt,name=downPot,proto3,enum=msg.PotType" json:"downPot,omitempty"` // 下注注池类型
	IsAction bool    `protobuf:"varint,4,opt,name=IsAction,proto3" json:"IsAction,omitempty"`                // 玩家是否行动
	Account  float64 `protobuf:"fixed64,5,opt,name=account,proto3" json:"account,omitempty"`                 // 玩家的最新金额
}

func (x *PlayerAction_S2C) Reset() {
	*x = PlayerAction_S2C{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerAction_S2C) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerAction_S2C) ProtoMessage() {}

func (x *PlayerAction_S2C) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerAction_S2C.ProtoReflect.Descriptor instead.
func (*PlayerAction_S2C) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{22}
}

func (x *PlayerAction_S2C) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlayerAction_S2C) GetDownBet() int32 {
	if x != nil {
		return x.DownBet
	}
	return 0
}

func (x *PlayerAction_S2C) GetDownPot() PotType {
	if x != nil {
		return x.DownPot
	}
	return PotType_XX_Pot
}

func (x *PlayerAction_S2C) GetIsAction() bool {
	if x != nil {
		return x.IsAction
	}
	return false
}

func (x *PlayerAction_S2C) GetAccount() float64 {
	if x != nil {
		return x.Account
	}
	return 0
}

// 广播注池金额变化
type PotChangeMoney_S2C struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerData    *PlayerData   `protobuf:"bytes,1,opt,name=playerData,proto3" json:"playerData,omitempty"`       // 玩家数据
	PotMoneyCount *DownBetMoney `protobuf:"bytes,2,opt,name=potMoneyCount,proto3" json:"potMoneyCount,omitempty"` //房间注池金额总数量集合
}

func (x *PotChangeMoney_S2C) Reset() {
	*x = PotChangeMoney_S2C{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PotChangeMoney_S2C) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PotChangeMoney_S2C) ProtoMessage() {}

func (x *PotChangeMoney_S2C) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PotChangeMoney_S2C.ProtoReflect.Descriptor instead.
func (*PotChangeMoney_S2C) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{23}
}

func (x *PotChangeMoney_S2C) GetPlayerData() *PlayerData {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

func (x *PotChangeMoney_S2C) GetPotMoneyCount() *DownBetMoney {
	if x != nil {
		return x.PotMoneyCount
	}
	return nil
}

type ResultData_S2C struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomData *RoomData `protobuf:"bytes,1,opt,name=roomData,proto3" json:"roomData,omitempty"`
}

func (x *ResultData_S2C) Reset() {
	*x = ResultData_S2C{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultData_S2C) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultData_S2C) ProtoMessage() {}

func (x *ResultData_S2C) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultData_S2C.ProtoReflect.Descriptor instead.
func (*ResultData_S2C) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{24}
}

func (x *ResultData_S2C) GetRoomData() *RoomData {
	if x != nil {
		return x.RoomData
	}
	return nil
}

type BankerData_C2S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    BankerStatus `protobuf:"varint,1,opt,name=status,proto3,enum=msg.BankerStatus" json:"status,omitempty"`
	TakeMoney int32        `protobuf:"varint,2,opt,name=takeMoney,proto3" json:"takeMoney,omitempty"`
}

func (x *BankerData_C2S) Reset() {
	*x = BankerData_C2S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BankerData_C2S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankerData_C2S) ProtoMessage() {}

func (x *BankerData_C2S) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankerData_C2S.ProtoReflect.Descriptor instead.
func (*BankerData_C2S) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{25}
}

func (x *BankerData_C2S) GetStatus() BankerStatus {
	if x != nil {
		return x.Status
	}
	return BankerStatus_BankerNot
}

func (x *BankerData_C2S) GetTakeMoney() int32 {
	if x != nil {
		return x.TakeMoney
	}
	return 0
}

type BankerData_S2C struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Banker    *PlayerData `protobuf:"bytes,1,opt,name=banker,proto3" json:"banker,omitempty"`
	TakeMoney int32       `protobuf:"varint,2,opt,name=takeMoney,proto3" json:"takeMoney,omitempty"`
}

func (x *BankerData_S2C) Reset() {
	*x = BankerData_S2C{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BankerData_S2C) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankerData_S2C) ProtoMessage() {}

func (x *BankerData_S2C) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankerData_S2C.ProtoReflect.Descriptor instead.
func (*BankerData_S2C) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{26}
}

func (x *BankerData_S2C) GetBanker() *PlayerData {
	if x != nil {
		return x.Banker
	}
	return nil
}

func (x *BankerData_S2C) GetTakeMoney() int32 {
	if x != nil {
		return x.TakeMoney
	}
	return 0
}

// 表情发送
type EmojiChat_C2S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActNum int32  `protobuf:"varint,1,opt,name=actNum,proto3" json:"actNum,omitempty"`
	GoalId string `protobuf:"bytes,2,opt,name=goalId,proto3" json:"goalId,omitempty"`
}

func (x *EmojiChat_C2S) Reset() {
	*x = EmojiChat_C2S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmojiChat_C2S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmojiChat_C2S) ProtoMessage() {}

func (x *EmojiChat_C2S) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmojiChat_C2S.ProtoReflect.Descriptor instead.
func (*EmojiChat_C2S) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{27}
}

func (x *EmojiChat_C2S) GetActNum() int32 {
	if x != nil {
		return x.ActNum
	}
	return 0
}

func (x *EmojiChat_C2S) GetGoalId() string {
	if x != nil {
		return x.GoalId
	}
	return ""
}

// 表情发送
type EmojiChat_S2C struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActNum int32  `protobuf:"varint,1,opt,name=actNum,proto3" json:"actNum,omitempty"`
	ActId  string `protobuf:"bytes,2,opt,name=actId,proto3" json:"actId,omitempty"`
	GoalId string `protobuf:"bytes,3,opt,name=goalId,proto3" json:"goalId,omitempty"`
}

func (x *EmojiChat_S2C) Reset() {
	*x = EmojiChat_S2C{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmojiChat_S2C) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmojiChat_S2C) ProtoMessage() {}

func (x *EmojiChat_S2C) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmojiChat_S2C.ProtoReflect.Descriptor instead.
func (*EmojiChat_S2C) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{28}
}

func (x *EmojiChat_S2C) GetActNum() int32 {
	if x != nil {
		return x.ActNum
	}
	return 0
}

func (x *EmojiChat_S2C) GetActId() string {
	if x != nil {
		return x.ActId
	}
	return ""
}

func (x *EmojiChat_S2C) GetGoalId() string {
	if x != nil {
		return x.GoalId
	}
	return ""
}

type BankerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	TakeMoney int32  `protobuf:"varint,2,opt,name=takeMoney,proto3" json:"takeMoney,omitempty"`
}

func (x *BankerList) Reset() {
	*x = BankerList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BankerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankerList) ProtoMessage() {}

func (x *BankerList) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankerList.ProtoReflect.Descriptor instead.
func (*BankerList) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{29}
}

func (x *BankerList) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BankerList) GetTakeMoney() int32 {
	if x != nil {
		return x.TakeMoney
	}
	return 0
}

// 发送时间(之後拿掉換成Action就好)
type SendActTime_S2C struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime  int32         `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	GameTime   int32         `protobuf:"varint,2,opt,name=gameTime,proto3" json:"gameTime,omitempty"`
	GameStep   GameStep      `protobuf:"varint,3,opt,name=gameStep,proto3,enum=msg.GameStep" json:"gameStep,omitempty"` // 当前状态
	BankerList []*BankerList `protobuf:"bytes,4,rep,name=bankerList,proto3" json:"bankerList,omitempty"`                // 庄家列表
}

func (x *SendActTime_S2C) Reset() {
	*x = SendActTime_S2C{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendActTime_S2C) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendActTime_S2C) ProtoMessage() {}

func (x *SendActTime_S2C) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendActTime_S2C.ProtoReflect.Descriptor instead.
func (*SendActTime_S2C) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{30}
}

func (x *SendActTime_S2C) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *SendActTime_S2C) GetGameTime() int32 {
	if x != nil {
		return x.GameTime
	}
	return 0
}

func (x *SendActTime_S2C) GetGameStep() GameStep {
	if x != nil {
		return x.GameStep
	}
	return GameStep_XX_Step
}

func (x *SendActTime_S2C) GetBankerList() []*BankerList {
	if x != nil {
		return x.BankerList
	}
	return nil
}

type ChangeRoomType_S2C struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room01 bool `protobuf:"varint,1,opt,name=room01,proto3" json:"room01,omitempty"`
	Room02 bool `protobuf:"varint,2,opt,name=room02,proto3" json:"room02,omitempty"`
}

func (x *ChangeRoomType_S2C) Reset() {
	*x = ChangeRoomType_S2C{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeRoomType_S2C) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeRoomType_S2C) ProtoMessage() {}

func (x *ChangeRoomType_S2C) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeRoomType_S2C.ProtoReflect.Descriptor instead.
func (*ChangeRoomType_S2C) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{31}
}

func (x *ChangeRoomType_S2C) GetRoom01() bool {
	if x != nil {
		return x.Room01
	}
	return false
}

func (x *ChangeRoomType_S2C) GetRoom02() bool {
	if x != nil {
		return x.Room02
	}
	return false
}

type ErrorMsg_S2C struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgData  string  `protobuf:"bytes,1,opt,name=msgData,proto3" json:"msgData,omitempty"`     // 错误消息
	LimitNum float64 `protobuf:"fixed64,2,opt,name=limitNum,proto3" json:"limitNum,omitempty"` // 最小限注最大限注金额
}

func (x *ErrorMsg_S2C) Reset() {
	*x = ErrorMsg_S2C{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorMsg_S2C) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMsg_S2C) ProtoMessage() {}

func (x *ErrorMsg_S2C) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMsg_S2C.ProtoReflect.Descriptor instead.
func (*ErrorMsg_S2C) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{32}
}

func (x *ErrorMsg_S2C) GetMsgData() string {
	if x != nil {
		return x.MsgData
	}
	return ""
}

func (x *ErrorMsg_S2C) GetLimitNum() float64 {
	if x != nil {
		return x.LimitNum
	}
	return 0
}

type ShowTableInfo_C2S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShowTableInfo_C2S) Reset() {
	*x = ShowTableInfo_C2S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowTableInfo_C2S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowTableInfo_C2S) ProtoMessage() {}

func (x *ShowTableInfo_C2S) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowTableInfo_C2S.ProtoReflect.Descriptor instead.
func (*ShowTableInfo_C2S) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{33}
}

type ShowTableInfo_S2C struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomData *RoomData `protobuf:"bytes,1,opt,name=roomData,proto3" json:"roomData,omitempty"`
}

func (x *ShowTableInfo_S2C) Reset() {
	*x = ShowTableInfo_S2C{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowTableInfo_S2C) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowTableInfo_S2C) ProtoMessage() {}

func (x *ShowTableInfo_S2C) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowTableInfo_S2C.ProtoReflect.Descriptor instead.
func (*ShowTableInfo_S2C) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{34}
}

func (x *ShowTableInfo_S2C) GetRoomData() *RoomData {
	if x != nil {
		return x.RoomData
	}
	return nil
}

// 异地登陆时被踢，此后不能再自动重连
type KickedOutPush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerTime int64 `protobuf:"varint,1,opt,name=serverTime,proto3" json:"serverTime,omitempty"`
	Code       int32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Reason     int32 `protobuf:"varint,3,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *KickedOutPush) Reset() {
	*x = KickedOutPush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickedOutPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickedOutPush) ProtoMessage() {}

func (x *KickedOutPush) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickedOutPush.ProtoReflect.Descriptor instead.
func (*KickedOutPush) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{35}
}

func (x *KickedOutPush) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *KickedOutPush) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *KickedOutPush) GetReason() int32 {
	if x != nil {
		return x.Reason
	}
	return 0
}

//直播玩家更新餘額
type ZhiBoUpdateBalancePush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerTime int64   `protobuf:"varint,1,opt,name=serverTime,proto3" json:"serverTime,omitempty"`
	Code       int32   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Balance    float64 `protobuf:"fixed64,3,opt,name=balance,proto3" json:"balance,omitempty"`
	LockMoney  float64 `protobuf:"fixed64,4,opt,name=lockMoney,proto3" json:"lockMoney,omitempty"`
	GiftMoney  float64 `protobuf:"fixed64,5,opt,name=giftMoney,proto3" json:"giftMoney,omitempty"`
	UserID     int32   `protobuf:"varint,6,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *ZhiBoUpdateBalancePush) Reset() {
	*x = ZhiBoUpdateBalancePush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZhiBoUpdateBalancePush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZhiBoUpdateBalancePush) ProtoMessage() {}

func (x *ZhiBoUpdateBalancePush) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZhiBoUpdateBalancePush.ProtoReflect.Descriptor instead.
func (*ZhiBoUpdateBalancePush) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{36}
}

func (x *ZhiBoUpdateBalancePush) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *ZhiBoUpdateBalancePush) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ZhiBoUpdateBalancePush) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *ZhiBoUpdateBalancePush) GetLockMoney() float64 {
	if x != nil {
		return x.LockMoney
	}
	return 0
}

func (x *ZhiBoUpdateBalancePush) GetGiftMoney() float64 {
	if x != nil {
		return x.GiftMoney
	}
	return 0
}

func (x *ZhiBoUpdateBalancePush) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

var File_msg_proto protoreflect.FileDescriptor

var file_msg_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x06, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x22, 0x26, 0x0a, 0x04, 0x50, 0x6f, 0x6e, 0x67,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x6c, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x49, 0x6d, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x61,
	0x64, 0x49, 0x6d, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4d,
	0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x43, 0x32, 0x53, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x61, 0x73, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50,
	0x61, 0x73, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xcc, 0x01,
	0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x53, 0x32, 0x43, 0x12, 0x2f, 0x0a, 0x0a, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x61, 0x63, 0x6b, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x62, 0x61, 0x63, 0x6b, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4e, 0x75, 0x6d, 0x52, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x52, 0x31, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x52, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x52, 0x32, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x30, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x30, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x30, 0x32, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x30, 0x32, 0x22, 0x0c, 0x0a, 0x0a,
	0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x43, 0x32, 0x53, 0x22, 0x0c, 0x0a, 0x0a, 0x4c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x5f, 0x53, 0x32, 0x43, 0x22, 0x90, 0x01, 0x0a, 0x0a, 0x50, 0x6f, 0x74,
	0x57, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x67, 0x53, 0x6d, 0x61, 0x6c,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x69, 0x67, 0x53, 0x6d, 0x61, 0x6c,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x6e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x69, 0x6e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12,
	0x2a, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0xde, 0x03, 0x0a, 0x0a,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x0a, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x0c, 0x64,
	0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x42, 0x65,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x6f,
	0x77, 0x6e, 0x42, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x69, 0x6e, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x77, 0x69,
	0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x3b, 0x0a,
	0x0e, 0x64, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x44, 0x6f, 0x77, 0x6e,
	0x42, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0e, 0x64, 0x6f, 0x77, 0x6e,
	0x42, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x42, 0x61, 0x6e, 0x6b,
	0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x42, 0x61, 0x6e, 0x6b,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x22, 0x92, 0x02, 0x0a,
	0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x42, 0x69, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x42, 0x69, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x42, 0x65,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x42,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x44, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x44, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x50, 0x61, 0x69, 0x72, 0x44, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x50, 0x61, 0x69, 0x72, 0x44, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x12,
	0x28, 0x0a, 0x0f, 0x53, 0x74, 0x72, 0x61, 0x69, 0x67, 0x68, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x42,
	0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x53, 0x74, 0x72, 0x61, 0x69, 0x67,
	0x68, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x4c, 0x65, 0x6f,
	0x70, 0x61, 0x72, 0x64, 0x44, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x4c, 0x65, 0x6f, 0x70, 0x61, 0x72, 0x64, 0x44, 0x6f, 0x77, 0x6e, 0x42, 0x65,
	0x74, 0x22, 0xd7, 0x01, 0x0a, 0x0e, 0x44, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x6d, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x6d, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4c, 0x6f, 0x74,
	0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x46, 0x58, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4c, 0x6f, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x46, 0x58, 0x52, 0x08, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x46, 0x58, 0x12, 0x35, 0x0a, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0c, 0x64,
	0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x57, 0x0a, 0x0d, 0x4c,
	0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x75, 0x63, 0x6b, 0x79, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6c, 0x75, 0x63, 0x6b, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x59, 0x0a, 0x0f, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x46, 0x58, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x75, 0x63, 0x6b, 0x79,
	0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x75, 0x63, 0x6b, 0x79,
	0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xb7, 0x01, 0x0a, 0x0b, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x6d, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x6d, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x4e, 0x75,
	0x6d, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x46, 0x58, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x46, 0x58, 0x52, 0x08, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x46, 0x58, 0x12,
	0x18, 0x0a, 0x07, 0x49, 0x73, 0x4c, 0x69, 0x75, 0x4a, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x49, 0x73, 0x4c, 0x69, 0x75, 0x4a, 0x75, 0x22, 0xf8, 0x02, 0x0a, 0x08, 0x52, 0x6f,
	0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x2f,
	0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x67,
	0x61, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x52, 0x08, 0x67, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x49, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x49, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x0d, 0x70, 0x6f, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0d,
	0x70, 0x6f, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a,
	0x0b, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x31, 0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x4e,
	0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x73, 0x4e, 0x75, 0x6d, 0x22, 0x26, 0x0a, 0x0c, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d,
	0x5f, 0x43, 0x32, 0x53, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x0c,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x5f, 0x53, 0x32, 0x43, 0x12, 0x29, 0x0a, 0x08,
	0x72, 0x6f, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x72,
	0x6f, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x66, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x66, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x0d, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d,
	0x5f, 0x53, 0x32, 0x43, 0x12, 0x29, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x0f, 0x0a, 0x0d, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x5f, 0x43, 0x32, 0x53,
	0x22, 0x40, 0x0a, 0x0d, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x5f, 0x53, 0x32,
	0x43, 0x12, 0x2f, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x5f, 0x53, 0x32, 0x43, 0x12, 0x29, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x65,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x70,
	0x12, 0x29, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x65, 0x66, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c,
	0x65, 0x66, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x43, 0x32, 0x53, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64,
	0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x6f,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x6f,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x6f, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x49, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x49, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x10, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x53, 0x32, 0x43, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x64, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x64, 0x6f, 0x77,
	0x6e, 0x50, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x50, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x6f,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7e, 0x0a, 0x12, 0x50, 0x6f, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x5f, 0x53, 0x32, 0x43, 0x12, 0x2f, 0x0a,
	0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37,
	0x0a, 0x0d, 0x70, 0x6f, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x44, 0x6f, 0x77, 0x6e,
	0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0d, 0x70, 0x6f, 0x74, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3b, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x53, 0x32, 0x43, 0x12, 0x29, 0x0a, 0x08, 0x72, 0x6f, 0x6f,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x59, 0x0a, 0x0e, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x5f, 0x43, 0x32, 0x53, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6e,
	0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x6b, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x61, 0x6b, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22,
	0x57, 0x0a, 0x0e, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x53, 0x32,
	0x43, 0x12, 0x27, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61,
	0x6b, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74,
	0x61, 0x6b, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x3f, 0x0a, 0x0d, 0x45, 0x6d, 0x6f, 0x6a,
	0x69, 0x43, 0x68, 0x61, 0x74, 0x5f, 0x43, 0x32, 0x53, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x4e, 0x75,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x6f, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x6f, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x0d, 0x45, 0x6d, 0x6f,
	0x6a, 0x69, 0x43, 0x68, 0x61, 0x74, 0x5f, 0x53, 0x32, 0x43, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x4e,
	0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x6f, 0x61, 0x6c,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x6f, 0x61, 0x6c, 0x49, 0x64,
	0x22, 0x3a, 0x0a, 0x0a, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x61, 0x6b, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x61, 0x6b, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0xa7, 0x01, 0x0a,
	0x0f, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x5f, 0x53, 0x32, 0x43,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x67, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x52, 0x08, 0x67, 0x61, 0x6d,
	0x65, 0x53, 0x74, 0x65, 0x70, 0x12, 0x2f, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6b,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x44, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x32, 0x43, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x30, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x30, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x30, 0x32, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x30, 0x32, 0x22, 0x44, 0x0a, 0x0c,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x53, 0x32, 0x43, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4e,
	0x75, 0x6d, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x5f, 0x43, 0x32, 0x53, 0x22, 0x3e, 0x0a, 0x11, 0x53, 0x68, 0x6f, 0x77, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x53, 0x32, 0x43, 0x12, 0x29, 0x0a, 0x08,
	0x72, 0x6f, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x72,
	0x6f, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x22, 0x5b, 0x0a, 0x0d, 0x4b, 0x69, 0x63, 0x6b, 0x65,
	0x64, 0x4f, 0x75, 0x74, 0x50, 0x75, 0x73, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x22, 0xba, 0x01, 0x0a, 0x16, 0x5a, 0x68, 0x69, 0x42, 0x6f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x75, 0x73, 0x68, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x67,
	0x69, 0x66, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x67, 0x69, 0x66, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x2a, 0xfc, 0x04, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12,
	0x0c, 0x0a, 0x08, 0x4d, 0x53, 0x47, 0x5f, 0x50, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x4d, 0x53, 0x47, 0x5f, 0x50, 0x6f, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4d,
	0x53, 0x47, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x43, 0x32, 0x53, 0x10, 0x02, 0x12, 0x11,
	0x0a, 0x0d, 0x4d, 0x53, 0x47, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x53, 0x32, 0x43, 0x10,
	0x03, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x53, 0x47, 0x5f, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f,
	0x43, 0x32, 0x53, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x53, 0x47, 0x5f, 0x4c, 0x6f, 0x67,
	0x6f, 0x75, 0x74, 0x5f, 0x53, 0x32, 0x43, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x53, 0x47,
	0x5f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x5f, 0x43, 0x32, 0x53, 0x10, 0x06, 0x12,
	0x14, 0x0a, 0x10, 0x4d, 0x53, 0x47, 0x5f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x5f,
	0x53, 0x32, 0x43, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x53, 0x47, 0x5f, 0x45, 0x6e, 0x74,
	0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x5f, 0x53, 0x32, 0x43, 0x10, 0x08, 0x12, 0x15, 0x0a, 0x11,
	0x4d, 0x53, 0x47, 0x5f, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x5f, 0x43, 0x32,
	0x53, 0x10, 0x09, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x53, 0x47, 0x5f, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x5f, 0x53, 0x32, 0x43, 0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x53,
	0x47, 0x5f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x5f, 0x53, 0x32, 0x43,
	0x10, 0x0b, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x53, 0x47, 0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x43, 0x32, 0x53, 0x10, 0x0c, 0x12, 0x18, 0x0a, 0x14,
	0x4d, 0x53, 0x47, 0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x53, 0x32, 0x43, 0x10, 0x0d, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x53, 0x47, 0x5f, 0x50, 0x6f,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x5f, 0x53, 0x32, 0x43,
	0x10, 0x0e, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x53, 0x47, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x5f, 0x53, 0x32, 0x43, 0x10, 0x0f, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x53,
	0x47, 0x5f, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x43, 0x32, 0x53,
	0x10, 0x10, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x53, 0x47, 0x5f, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x5f, 0x53, 0x32, 0x43, 0x10, 0x11, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x53,
	0x47, 0x5f, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x43, 0x68, 0x61, 0x74, 0x5f, 0x43, 0x32, 0x53, 0x10,
	0x12, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x53, 0x47, 0x5f, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x43, 0x68,
	0x61, 0x74, 0x5f, 0x53, 0x32, 0x43, 0x10, 0x13, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x53, 0x47, 0x5f,
	0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x5f, 0x53, 0x32, 0x43, 0x10,
	0x14, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x53, 0x47, 0x5f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x32, 0x43, 0x10, 0x15, 0x12, 0x14, 0x0a,
	0x10, 0x4d, 0x53, 0x47, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x53, 0x32,
	0x43, 0x10, 0x16, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x53, 0x47, 0x5f, 0x53, 0x68, 0x6f, 0x77, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x43, 0x32, 0x53, 0x10, 0x17, 0x12, 0x19,
	0x0a, 0x15, 0x4d, 0x53, 0x47, 0x5f, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x5f, 0x53, 0x32, 0x43, 0x10, 0x18, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x53, 0x47,
	0x5f, 0x4b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x50, 0x75, 0x73, 0x68, 0x10, 0x19,
	0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x53, 0x47, 0x5f, 0x5a, 0x68, 0x69, 0x42, 0x6f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x75, 0x73, 0x68, 0x10, 0x1a,
	0x2a, 0x6b, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x12, 0x0b, 0x0a, 0x07,
	0x58, 0x58, 0x5f, 0x53, 0x74, 0x65, 0x70, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x61, 0x6e,
	0x6b, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x32,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x6f, 0x77, 0x6e, 0x42, 0x65, 0x74, 0x10, 0x03, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x69, 0x75, 0x4a, 0x75, 0x10, 0x07, 0x2a, 0x3a, 0x0a,
	0x0c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a,
	0x09, 0x58, 0x58, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x50, 0x6c, 0x61, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x10, 0x02, 0x2a, 0x3b, 0x0a, 0x0c, 0x42, 0x61, 0x6e,
	0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x61, 0x6e,
	0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b,
	0x65, 0x72, 0x55, 0x70, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72,
	0x44, 0x6f, 0x77, 0x6e, 0x10, 0x02, 0x2a, 0x7b, 0x0a, 0x07, 0x50, 0x6f, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0a, 0x0a, 0x06, 0x58, 0x58, 0x5f, 0x50, 0x6f, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x42, 0x69, 0x67, 0x50, 0x6f, 0x74, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x6d, 0x61,
	0x6c, 0x6c, 0x50, 0x6f, 0x74, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x50, 0x6f, 0x74, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x50, 0x6f, 0x74, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x61, 0x69, 0x72, 0x50, 0x6f, 0x74,
	0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x61, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f,
	0x74, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x65, 0x6f, 0x70, 0x61, 0x72, 0x64, 0x50, 0x6f,
	0x74, 0x10, 0x07, 0x2a, 0x39, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x58, 0x58, 0x5f, 0x43, 0x61, 0x72, 0x64, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x69, 0x67, 0x10,
	0x02, 0x12, 0x0b, 0x0a, 0x07, 0x4c, 0x65, 0x6f, 0x70, 0x61, 0x72, 0x64, 0x10, 0x03, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_msg_proto_rawDescOnce sync.Once
	file_msg_proto_rawDescData = file_msg_proto_rawDesc
)

func file_msg_proto_rawDescGZIP() []byte {
	file_msg_proto_rawDescOnce.Do(func() {
		file_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_msg_proto_rawDescData)
	})
	return file_msg_proto_rawDescData
}

var file_msg_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_msg_proto_goTypes = []interface{}{
	(MessageID)(0),                 // 0: msg.MessageID
	(GameStep)(0),                  // 1: msg.GameStep
	(PlayerStatus)(0),              // 2: msg.PlayerStatus
	(BankerStatus)(0),              // 3: msg.BankerStatus
	(PotType)(0),                   // 4: msg.PotType
	(CardsType)(0),                 // 5: msg.CardsType
	(*Ping)(nil),                   // 6: msg.Ping
	(*Pong)(nil),                   // 7: msg.Pong
	(*PlayerInfo)(nil),             // 8: msg.PlayerInfo
	(*Login_C2S)(nil),              // 9: msg.Login_C2S
	(*Login_S2C)(nil),              // 10: msg.Login_S2C
	(*Logout_C2S)(nil),             // 11: msg.Logout_C2S
	(*Logout_S2C)(nil),             // 12: msg.Logout_S2C
	(*PotWinList)(nil),             // 13: msg.PotWinList
	(*PlayerData)(nil),             // 14: msg.PlayerData
	(*DownBetMoney)(nil),           // 15: msg.DownBetMoney
	(*DownBetHistory)(nil),         // 16: msg.DownBetHistory
	(*LotteryResult)(nil),          // 17: msg.LotteryResult
	(*LotteryResultFX)(nil),        // 18: msg.LotteryResultFX
	(*LotteryData)(nil),            // 19: msg.LotteryData
	(*RoomData)(nil),               // 20: msg.RoomData
	(*JoinRoom_C2S)(nil),           // 21: msg.JoinRoom_C2S
	(*JoinRoom_S2C)(nil),           // 22: msg.JoinRoom_S2C
	(*EnterRoom_S2C)(nil),          // 23: msg.EnterRoom_S2C
	(*LeaveRoom_C2S)(nil),          // 24: msg.LeaveRoom_C2S
	(*LeaveRoom_S2C)(nil),          // 25: msg.LeaveRoom_S2C
	(*ActionTime_S2C)(nil),         // 26: msg.ActionTime_S2C
	(*PlayerAction_C2S)(nil),       // 27: msg.PlayerAction_C2S
	(*PlayerAction_S2C)(nil),       // 28: msg.PlayerAction_S2C
	(*PotChangeMoney_S2C)(nil),     // 29: msg.PotChangeMoney_S2C
	(*ResultData_S2C)(nil),         // 30: msg.ResultData_S2C
	(*BankerData_C2S)(nil),         // 31: msg.BankerData_C2S
	(*BankerData_S2C)(nil),         // 32: msg.BankerData_S2C
	(*EmojiChat_C2S)(nil),          // 33: msg.EmojiChat_C2S
	(*EmojiChat_S2C)(nil),          // 34: msg.EmojiChat_S2C
	(*BankerList)(nil),             // 35: msg.BankerList
	(*SendActTime_S2C)(nil),        // 36: msg.SendActTime_S2C
	(*ChangeRoomType_S2C)(nil),     // 37: msg.ChangeRoomType_S2C
	(*ErrorMsg_S2C)(nil),           // 38: msg.ErrorMsg_S2C
	(*ShowTableInfo_C2S)(nil),      // 39: msg.ShowTableInfo_C2S
	(*ShowTableInfo_S2C)(nil),      // 40: msg.ShowTableInfo_S2C
	(*KickedOutPush)(nil),          // 41: msg.KickedOutPush
	(*ZhiBoUpdateBalancePush)(nil), // 42: msg.ZhiBoUpdateBalancePush
}
var file_msg_proto_depIdxs = []int32{
	8,  // 0: msg.Login_S2C.playerInfo:type_name -> msg.PlayerInfo
	5,  // 1: msg.PotWinList.cardType:type_name -> msg.CardsType
	8,  // 2: msg.PlayerData.playerInfo:type_name -> msg.PlayerInfo
	15, // 3: msg.PlayerData.downBetMoney:type_name -> msg.DownBetMoney
	2,  // 4: msg.PlayerData.status:type_name -> msg.PlayerStatus
	16, // 5: msg.PlayerData.downBetHistory:type_name -> msg.DownBetHistory
	17, // 6: msg.DownBetHistory.result:type_name -> msg.LotteryResult
	18, // 7: msg.DownBetHistory.resultFX:type_name -> msg.LotteryResultFX
	15, // 8: msg.DownBetHistory.downBetMoney:type_name -> msg.DownBetMoney
	5,  // 9: msg.LotteryResult.cardType:type_name -> msg.CardsType
	5,  // 10: msg.LotteryResultFX.cardType:type_name -> msg.CardsType
	17, // 11: msg.LotteryData.result:type_name -> msg.LotteryResult
	18, // 12: msg.LotteryData.resultFX:type_name -> msg.LotteryResultFX
	14, // 13: msg.RoomData.playerData:type_name -> msg.PlayerData
	1,  // 14: msg.RoomData.gameStep:type_name -> msg.GameStep
	15, // 15: msg.RoomData.potMoneyCount:type_name -> msg.DownBetMoney
	19, // 16: msg.RoomData.historyData:type_name -> msg.LotteryData
	14, // 17: msg.RoomData.tablePlayer:type_name -> msg.PlayerData
	20, // 18: msg.JoinRoom_S2C.roomData:type_name -> msg.RoomData
	20, // 19: msg.EnterRoom_S2C.roomData:type_name -> msg.RoomData
	8,  // 20: msg.LeaveRoom_S2C.playerInfo:type_name -> msg.PlayerInfo
	1,  // 21: msg.ActionTime_S2C.gameStep:type_name -> msg.GameStep
	20, // 22: msg.ActionTime_S2C.roomData:type_name -> msg.RoomData
	4,  // 23: msg.PlayerAction_C2S.downPot:type_name -> msg.PotType
	4,  // 24: msg.PlayerAction_S2C.downPot:type_name -> msg.PotType
	14, // 25: msg.PotChangeMoney_S2C.playerData:type_name -> msg.PlayerData
	15, // 26: msg.PotChangeMoney_S2C.potMoneyCount:type_name -> msg.DownBetMoney
	20, // 27: msg.ResultData_S2C.roomData:type_name -> msg.RoomData
	3,  // 28: msg.BankerData_C2S.status:type_name -> msg.BankerStatus
	14, // 29: msg.BankerData_S2C.banker:type_name -> msg.PlayerData
	1,  // 30: msg.SendActTime_S2C.gameStep:type_name -> msg.GameStep
	35, // 31: msg.SendActTime_S2C.bankerList:type_name -> msg.BankerList
	20, // 32: msg.ShowTableInfo_S2C.roomData:type_name -> msg.RoomData
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_msg_proto_init() }
func file_msg_proto_init() {
	if File_msg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Login_C2S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Login_S2C); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Logout_C2S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Logout_S2C); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PotWinList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownBetMoney); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownBetHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LotteryResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LotteryResultFX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LotteryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRoom_C2S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRoom_S2C); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterRoom_S2C); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveRoom_C2S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveRoom_S2C); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionTime_S2C); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerAction_C2S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerAction_S2C); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PotChangeMoney_S2C); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultData_S2C); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BankerData_C2S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BankerData_S2C); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmojiChat_C2S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmojiChat_S2C); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BankerList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendActTime_S2C); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeRoomType_S2C); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorMsg_S2C); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowTableInfo_C2S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowTableInfo_S2C); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickedOutPush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZhiBoUpdateBalancePush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_msg_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_msg_proto_goTypes,
		DependencyIndexes: file_msg_proto_depIdxs,
		EnumInfos:         file_msg_proto_enumTypes,
		MessageInfos:      file_msg_proto_msgTypes,
	}.Build()
	File_msg_proto = out.File
	file_msg_proto_rawDesc = nil
	file_msg_proto_goTypes = nil
	file_msg_proto_depIdxs = nil
}
